name: Build Retail App Container
on:
  push:
    paths:
      - src/**
      - public/**
      - package.json
      - docker-compose.yaml
      - Dockerfile
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:

env:
  NODE_VERSION: 18
  NODE_OPTIONS: --max-old-space-size=4096
  SERVICE: retail-app

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Enable Corepack
        run: corepack enable

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: 'yarn.lock'

      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-v18-node_modules-${{ github.base_ref }}-retail-app-${{ hashFiles('yarn.lock', 'package.json') }}

      - name: yarn install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      # End of yarn setup
    
      - name: yarn build
        run: yarn build

      - name: NPM Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # Authenticate to GitHub Docker Registry
      - name: Login to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Container
        run: |-
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          docker compose build
          docker push ghcr.io/alctestorg/${{ env.SERVICE }}:latest
          docker tag ghcr.io/alctestorg/${{ env.SERVICE }}:latest ghcr.io/alctestorg/${{ env.SERVICE }}:$VERSION
          docker push ghcr.io/alctestorg/${{ env.SERVICE }}:$VERSION

      - id: create-latest-container-yaml
        name: Create latest container YAML
        uses: opencontextinc/create-artifact-yaml@v1
        with:
          type: container
          url: ghcr.io/alctestorg/${{ env.SERVICE }}:latest

      - uses: actions/upload-artifact@v3.1.0
        with:
          name: latest-container-yaml
          path: ${{ steps.create-latest-container-yaml.outputs.filename }}

      - id: create-versioned-container-yaml
        name: Create versioned container YAML
        if: ${{ github.event_name == 'release' }}
        uses: opencontextinc/create-artifact-yaml@v1
        with:
          type: container
          url: ghcr.io/alctestorg/${{ env.SERVICE }}:$VERSION

      - uses: actions/upload-artifact@v3.1.0
        if: ${{ github.event_name == 'release' }}
        with:
          name: versioned-container-yaml
          path: ${{ steps.create-versioned-container-yaml.outputs.filename }}
